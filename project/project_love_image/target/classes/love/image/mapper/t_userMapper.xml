<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="love.image.dao.t_userMapper" >
  <resultMap id="BaseResultMap" type="love.image.model.t_user" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="add_time" property="add_time" jdbcType="TIMESTAMP" />
    <result column="add_status" property="add_status" jdbcType="INTEGER" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="user_name_nick" property="user_name_nick" jdbcType="VARCHAR" />
    <result column="user_image" property="user_image" jdbcType="VARCHAR" />
    <result column="user_telephone" property="user_telephone" jdbcType="VARCHAR" />
    <result column="user_password" property="user_password" jdbcType="VARCHAR" />
    <result column="user_level" property="user_level" jdbcType="INTEGER" />
    <result column="user_money" property="user_money" jdbcType="DOUBLE" />
    <result column="login_count" property="login_count" jdbcType="INTEGER" />
    <result column="login_ip" property="login_ip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, add_time, add_status, user_name, user_name_nick, user_image, user_telephone, 
    user_password, user_level, user_money, login_count, login_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="love.image.model.t_user" useGeneratedKeys="true" keyProperty="id">
    insert into t_user (id, add_time, add_status, 
      user_name, user_name_nick, user_image, 
      user_telephone, user_password, user_level, 
      user_money, login_count, login_ip
      )
    values (#{id,jdbcType=INTEGER}, #{add_time,jdbcType=TIMESTAMP}, #{add_status,jdbcType=INTEGER}, 
      #{user_name,jdbcType=VARCHAR}, #{user_name_nick,jdbcType=VARCHAR}, #{user_image,jdbcType=VARCHAR}, 
      #{user_telephone,jdbcType=VARCHAR}, #{user_password,jdbcType=VARCHAR}, #{user_level,jdbcType=INTEGER}, 
      #{user_money,jdbcType=DOUBLE}, #{login_count,jdbcType=INTEGER}, #{login_ip,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="love.image.model.t_user" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="add_time != null" >
        add_time,
      </if>
      <if test="add_status != null" >
        add_status,
      </if>
      <if test="user_name != null" >
        user_name,
      </if>
      <if test="user_name_nick != null" >
        user_name_nick,
      </if>
      <if test="user_image != null" >
        user_image,
      </if>
      <if test="user_telephone != null" >
        user_telephone,
      </if>
      <if test="user_password != null" >
        user_password,
      </if>
      <if test="user_level != null" >
        user_level,
      </if>
      <if test="user_money != null" >
        user_money,
      </if>
      <if test="login_count != null" >
        login_count,
      </if>
      <if test="login_ip != null" >
        login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="add_time != null" >
        #{add_time,jdbcType=TIMESTAMP},
      </if>
      <if test="add_status != null" >
        #{add_status,jdbcType=INTEGER},
      </if>
      <if test="user_name != null" >
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="user_name_nick != null" >
        #{user_name_nick,jdbcType=VARCHAR},
      </if>
      <if test="user_image != null" >
        #{user_image,jdbcType=VARCHAR},
      </if>
      <if test="user_telephone != null" >
        #{user_telephone,jdbcType=VARCHAR},
      </if>
      <if test="user_password != null" >
        #{user_password,jdbcType=VARCHAR},
      </if>
      <if test="user_level != null" >
        #{user_level,jdbcType=INTEGER},
      </if>
      <if test="user_money != null" >
        #{user_money,jdbcType=DOUBLE},
      </if>
      <if test="login_count != null" >
        #{login_count,jdbcType=INTEGER},
      </if>
      <if test="login_ip != null" >
        #{login_ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="love.image.model.t_user" >
    update t_user
    <set >
      <if test="add_time != null" >
        add_time = #{add_time,jdbcType=TIMESTAMP},
      </if>
      <if test="add_status != null" >
        add_status = #{add_status,jdbcType=INTEGER},
      </if>
      <if test="user_name != null" >
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="user_name_nick != null" >
        user_name_nick = #{user_name_nick,jdbcType=VARCHAR},
      </if>
      <if test="user_image != null" >
        user_image = #{user_image,jdbcType=VARCHAR},
      </if>
      <if test="user_telephone != null" >
        user_telephone = #{user_telephone,jdbcType=VARCHAR},
      </if>
      <if test="user_password != null" >
        user_password = #{user_password,jdbcType=VARCHAR},
      </if>
      <if test="user_level != null" >
        user_level = #{user_level,jdbcType=INTEGER},
      </if>
      <if test="user_money != null" >
        user_money = #{user_money,jdbcType=DOUBLE},
      </if>
      <if test="login_count != null" >
        login_count = #{login_count,jdbcType=INTEGER},
      </if>
      <if test="login_ip != null" >
        login_ip = #{login_ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="love.image.model.t_user" >
    update t_user
    set add_time = #{add_time,jdbcType=TIMESTAMP},
      add_status = #{add_status,jdbcType=INTEGER},
      user_name = #{user_name,jdbcType=VARCHAR},
      user_name_nick = #{user_name_nick,jdbcType=VARCHAR},
      user_image = #{user_image,jdbcType=VARCHAR},
      user_telephone = #{user_telephone,jdbcType=VARCHAR},
      user_password = #{user_password,jdbcType=VARCHAR},
      user_level = #{user_level,jdbcType=INTEGER},
      user_money = #{user_money,jdbcType=DOUBLE},
      login_count = #{login_count,jdbcType=INTEGER},
      login_ip = #{login_ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
  <select id="selectMaxUser" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    SELECT
		IFNULL(t.max_id, 0) AS max_id
	FROM
		(
			SELECT
				max(id) AS max_id
			FROM
				t_user
		) t
  </select>
  
</mapper>